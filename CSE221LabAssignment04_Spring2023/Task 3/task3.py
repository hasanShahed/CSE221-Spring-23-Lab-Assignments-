# -*- coding: utf-8 -*-
"""Task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h-duf4MSD03uxORYl3aIQEtsOsNyD-Wb
"""

inp = open("/content/input3.txt",'r')
out = open("/content/output3.txt",'w')
read = inp.readlines()
arr_1 = read[1].split(' ')
arr = []
for i in arr_1:
  arr.append(int(i))

def merge(a,b):   
  count = 0
  lst = []
  idx_a = 0
  idx_b = 0
  while idx_a != len(a) and idx_b != len(b):
    if a[idx_a] <= b[idx_b]:
      lst.append(a[idx_a])
      idx_a += 1
    else:
      lst.append(b[idx_b])
      count += len(a)-idx_a
      idx_b += 1    
  while idx_a < len(a):
    lst.append(a[idx_a])
    idx_a += 1
  while idx_b < len(b):
    lst.append(b[idx_b])
    idx_b += 1
  return lst,count


def mergeSort(arr):
  if len(arr) <= 1:
    return arr, 0
  else:
    mid = len(arr)//2
    a1,count_1 = mergeSort(arr[0:mid])  
    a2,count_2 = mergeSort(arr[mid:len(arr)])      
    merged,count = merge(a1,a2)
    return merged,count + count_1 + count_2


a = mergeSort(arr)
out.write(str(a[1]))

inp.close()
out.close()