# -*- coding: utf-8 -*-
"""Task 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h-duf4MSD03uxORYl3aIQEtsOsNyD-Wb
"""

out = open('/content/output1.txt','w')

def readFile():
  f = open("/content/graph.txt", "r")
  n = f.readline()
  n = n.strip()
  n = int(n)
  c = f.readline()
  c = c.strip()
  c = int(c)
  out.write("Build graph using Dictionary\n")
  buildGraphUsingDictionary(c,f)
  f.seek(0)
  n = f.readline()
  n = n.strip()
  n = int(n)
  c = f.readline()
  c = c.strip()
  c = int(c)
  out.write("Build graph using List of Lists\n")
  buildGraphUsingListofLists(c,f)


def buildGraphUsingDictionary(c,f): 
  graph = {}   
  counter = 0
  while (counter<c):
      line = f.readline()
      x,y = line.split(",")
      y = y.strip()        
      if(x in graph):
          graph[x].append(y)
      else:
          graph[x] = [y]
      counter+=1        
  printGraph(graph, None)


def printGraph(graph,listGraph):
  if graph != None:
    for x,y in graph.items():
      out.write(str(x)+"-> ")
      for i in y:
        if i != y[-1]:
          out.write(str(i)+", ")
        else:
          out.write(str(i)+"\n")
  if listGraph != None:
    for x in listGraph:
      if x != None:       
        out.write(str(x[0])+"-> ")        
        for y in range (len(x)):
          if x[y] != x[-1]:          
            out.write(str(x[y])+", ")
          else:
            out.write(str(x[y])+"\n")            


def buildGraphUsingListofLists(c,f):
  listGraph = [None]*c 
  counter = 0
  while counter<c:
      line = f.readline()
      a,b = line.split(",")
      b = b.strip()
      a = int(a)
      b = int(b)     
      if listGraph[a]!=None:
          listGraph[a].append(b)
      else:
          listGraph[a] = [b]       
      counter +=1    
  printGraph(None,listGraph)
# ======================Program starts here.========================


readFile()
out.close()