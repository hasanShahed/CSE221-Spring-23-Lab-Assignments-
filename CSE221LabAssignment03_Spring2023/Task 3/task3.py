# -*- coding: utf-8 -*-
"""Task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gYWlFi5e-6eim6aupC_SyTe4WyM-3F4K
"""

inp = open('/content/input3.txt', 'r')
out = open('/content/output3.txt', 'w')
read = inp.readlines()

lst = []
queue = []
heap_q = []
heap_l = []

for i in read:
  queue.append(i.split())

for i in queue:
  heap_l.append(i)

def printqueue(dequeue):
  for i in dequeue:
    out.write('Name:'+i[0]+'\n')

def seedoctor():
  for i in range(len(lst)):
    for j in range(len(lst) - 1):
      if int(lst[j][1]) > int(lst[j + 1][1]):
        lst[j + 1] = lst[j]
        lst[j] = lst[j + 1]
  pop = lst.pop(0)
    
def swim(lis, heap_sort, idx): 
  high = idx
  l = (2*idx)+1
  r = (2*idx)+2   
  if l < heap_sort:
    if int(lis[idx][1])<int(lis[l][1]):
      high = l       
  if r < heap_sort:
    if int(lis[high][1])<int(lis[r][1]):
      high = r        
  if high != idx:
    temp = lis[idx]
    lis[idx] = lis[high]
    lis[high] = temp
    swim(lis, heap_sort, high)

def heapsort(lis): 
  heap_sort = len(lis)    
  for i in range(int(heap_sort/2)-1, -1, -1):
    swim(lis, heap_sort, i)
  for j in range(heap_sort-1, 0, -1):
    temp = lis[j]
    lis[j] = lis[0]
    lis[0] = temp
    swim(lis, j, 0)       
  popper = heap_q.pop(0)    
            
def heap_system():    
  for i in heap_l:
    if i[1] != 'doctor':
      heap_q.append(i)    
    else:
      heapsort(heap_q)

def bubble_system():   
  for i in queue:
    if i[1] != 'doctor':
      lst.append(i)
    else:
      seedoctor()
            
heap_system()
bubble_system()
out.write('Bubble sort queue: \n')
printqueue(lst)
out.write('Heap sort queue: \n')
printqueue(heap_q)

inp.close()
out.close()