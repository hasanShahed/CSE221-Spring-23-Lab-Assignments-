# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eHrSIL-yDqFaP5C9755ZGq08Srlg_fJN
"""

import math
from queue import PriorityQueue

def Graph(n,m):
    adj = [None]*(n+1)
    for i in range(m):
        u,v,w = list(map(int,inp.readline().split(" ")))
        if adj[u]==None:
            adj[u] = [(str(v),w)]
        else:
            adj[u].append((str(v),w))
    return adj

def dijsktra(s,graph,c):
    dis_lst = [math.inf]*(n+1)
    queue = PriorityQueue()
    queue.put((c,s))
    while queue.empty()!= True:
        cost,src = queue.get()
        if dis_lst[int(src)] > cost:
            dis_lst[int(src)] = cost
            if graph[int(src)] != None:
                for i in graph[int(src)]:
                    src,up_cost = i
                    queue.put((up_cost+cost,src))
    return dis_lst

inp = open("/content/input3.txt",'r')
out = open("/content/output3.txt",'w')
n,m = list(map(int,inp.readline().split(" ")))
adj = Graph(n,m)
a = dijsktra(1,adj,0)
max = -1
for i in range(1,len(a)):
    if a[i]==math.inf:
        print("Impossible",file = out)
        break
    else:
        if max < a[i]:
            max = a[i]
print(max,file = out)

inp.close()
out.close()