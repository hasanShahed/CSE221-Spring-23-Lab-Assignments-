# -*- coding: utf-8 -*-
"""Task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ToyfmT0HaQwCxLErqkwZuk-9syWPSHwW
"""

inp = open("/content/input3.txt","r")
out = open("/content/output3.txt","w")

arr_1 = inp.readlines()
def bubbleSort(arr):
  for i in range(len(arr)-1):
    flag = "no"
    for j in range(len(arr)-i-1):
      if arr[j] > arr[j+1]:
          arr[j], arr[j+1] = arr[j+1], arr[j]
          flag = "yes"                        
    if flag == "no":
      break
          
  return arr

stg = arr_1[1].strip("\n")
list_1 = [int(i) for i in stg.split(" ")]
var_1 = bubbleSort(list_1)

for k in range(int(arr_1[0])):
    out.write(str(var_1[k])+" ")

inp.close()
out.close()

"""#Explaination
When an array needs sorting, it will make the flag yes which will enable the nested loop and the time complexity will be θ(n^2). and if an array doesn't need sorting then the flag stays no and it will break the loop. So, the time complexity will be θ(n). Since the input 2 is already sorted so it's time complexity is θ(n) which is the best case scenario.
"""