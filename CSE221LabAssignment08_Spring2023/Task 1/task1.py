# -*- coding: utf-8 -*-
"""task1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eHrSIL-yDqFaP5C9755ZGq08Srlg_fJN
"""

f=open('/content/input.txt','r')
f2=open('/content/output.txt','w')
r1= list(map(int,f.readline().strip().split(" ")))
n=r1[0]
m=r1[1]
l=[]
parent=[]
for y in range(n+1):
  parent.append(y)
sz=[1]*(n+1)
for i in range(m):
    u,v,w=map(int,f.readline().split())
    #print(a)
    l.append((w,u,v))
#print(l)
l.sort()
#print(l)
def find(r):
    if parent[r]==r:
        return r
    else:
        parent[r]=find(parent[r])
        return parent[r]
def union(u,v):
    a=find(u)
    b=find(v)
    if a==b:
        return -1
    if sz[u]<sz[v]:
        temp=a
        a=b
        b=temp
    parent[b]=a
    sz[a]+=sz[b]
    return 1
minspan=[]
for edge in l:
    w,u,v=edge
    if union(u,v)!=-1:
        minspan.append(edge)
max_edge=0
for edge in minspan:
    w,u,v=edge
    par_a=find(u)
    par_b=find(v)
    if par_a!=par_b:
        continue
    temp_par=parent[:]
    temp_sz=sz[:]
    temp_par[par_a]=par_a
    temp_sz[par_a]=1
    for e in minspan:
        x,y,z=e
        if x>=w:
            break
        if union(y,z):
            temp_par[find(y)]=find(z)
            temp_sz[find(z)]+=temp_sz[find(y)]
            if temp_sz[find(z)]==n:
                max_edge=x
                break
f2.write(str(sum(w for w,u,v in minspan)-max_edge))
f.close()
f2.close()